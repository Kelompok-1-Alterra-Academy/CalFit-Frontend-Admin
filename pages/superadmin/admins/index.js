import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import MaterialTable from 'material-table';
import { Grid } from '@mui/material';
import { useStyles } from '../../../styles/classes/Index.style';
import { TopBar } from '../../../src/components/navigation/TopBar';
import { MenuBar } from '../../../src/components/navigation/MenuBar';
import { tableIcons } from '../../../src/components/table/MaterialTable';
import { getAllAdmins} from '../../../src/utils/fetchApi/admins';
import jwtDecode from '../../../src/utils/jwtDecode/jwtDecode';

export default function AdminsSuperAdmin() {
  const styles = useStyles();
  const router = useRouter();
  const [adminsList, setAdminsList] = useState([]);
  const [alertAdmins, setAdmins] = useState({
    status: false,
    message: '',
  })
  const [loading, setLoading] = useState(false);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  useEffect(() => {
    const { Superadmin: superadmin } = jwtDecode();
    if (!superadmin) router.push('/superadmin/login');
    else {
      setIsAuthenticated(true);
      getAllAdmins(setLoading, setAdminList, { limit: 1000, page: 1 });
    }
  }, []);
  return (
    <div className={styles.root}>
      <Head>
        <title>Calfit Admins Page</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <TopBar/>

      <main className={styles.main}>
        <Grid container spacing={2} m={2}>
          <Grid item xs={3}>
            <MenuBar selected={'Admins'} />
          </Grid>
          <Grid item xs={9}>
          <MaterialTable
                className={styles.table}
                title='Admins'
                icons={tableIcons}
                columns={[
                  { title: 'Id', field: 'id' },
                  { title: 'User Name', field: 'username' },
                ]}
                data={adminsList}
                // actions={[
                //   {
                //     icon: tableIcons.Edit,
                //     tooltip: 'Edit Class',
                //     // onClick: (event, rowData) => router.push(`/superadmin/classes/edit/${rowData.id}`),
                //     onClick: (event, rowData) =>
                //       router.push(`/superadmin/clubs/${rowData.gymID}/classes/${rowData.id}/edit`),
                //   },
                //   (rowData) => ({
                //     icon: tableIcons.Delete,
                //     tooltip: 'Delete Class',
                //     onClick: (event, rowData) => {
                //       const isDelete = confirm(`You want to delete ${rowData.name}(id: ${rowData.id}) ?`);
                //       if (isDelete) {
                //         const success = handleDelete(rowData.gymID, rowData.id);
                //         if (success) alert(`You deleted ${rowData.name}(id: ${rowData.id})`);
                //         else alert(`Can't delete ${rowData.name}(id: ${rowData.id})`);
                //       }
                //     },
                //   }),
                //   // {
                //   //   icon: tableIcons.Add,
                //   //   tooltip: 'Add New Class',
                //   //   isFreeAction: true,
                //   //   onClick: (event) => router.push('/superadmin/classes/add'),
                //   // },
                // ]}
                options={{
                  actionsColumnIndex: -1,
                }}
              />
          </Grid>
        </Grid>
      </main>
    </div>
  );
}
