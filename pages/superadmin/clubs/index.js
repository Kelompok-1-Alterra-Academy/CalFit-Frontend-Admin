import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import MaterialTable from 'material-table';
import { useStyles } from '../../../styles/clubs/Index.style';
import { TopBar } from '../../../src/components/navigation/TopBar';
import { MenuBar } from '../../../src/components/navigation/MenuBar';
import { tableIcons } from '../../../src/components/table/MaterialTable';
import { getAllGyms } from '../../../src/utils/fetchApi/clubs';
import { deleteGym } from '../../../src/utils/fetchApi/clubs';

const setAddress = (address) => {
  return `${address.address}, ${address.district}, ${address.city}`;
};

export default function ClubsSuperAdmin() {
  const classes = useStyles();
  const router = useRouter();
  const [clubs, setClubs] = useState([]);
  const [alertClubs, setAlertClubs] = useState({
    status: false,
    message: '',
  });
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    getAllGyms(setLoading, setClubs, { limit: 1000, page: 1 });
  }, []);

  useEffect(() => {
    clubs?.map((club) => {
      club.addressString = club.address.address;
    });
  }, [clubs]);

  const handleDelete = async (id) => {
    const res = await deleteGym(setLoading, setAlertClubs, id);
    if (res.status === 202) {
      setClubs(clubs.filter((club) => club.id !== id));
      return true;
    }
    return false;
  };

  return (
    <div className={classes.root}>
      <Head>
        <title>Clubs Page</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <TopBar />

      <main className={classes.main}>
        <MenuBar selected={'Clubs'} />
        <MaterialTable
          className={classes.table}
          title='Clubs'
          icons={tableIcons}
          columns={[
            { title: 'Id', field: 'id' },
            { title: 'Name', field: 'name' },
            {
              title: 'Admin',
              field: 'operationalAdminId',
              width: '10%',
            },
            { title: 'Telephone', field: 'telephone', width: '10%' },
            { title: 'Address', field: 'addressString' },
          ]}
          data={clubs}
          actions={[
            {
              icon: tableIcons.Edit,
              tooltip: 'Edit Club',
              onClick: (event, rowData) => router.push(`/superadmin/clubs/edit/${rowData.id}`),
            },
            (rowData) => ({
              icon: tableIcons.Delete,
              tooltip: 'Delete Club',
              onClick: (event, rowData) => {
                const isDelete = confirm(`You want to delete ${rowData.name}(id: ${rowData.id}) ?`);
                if (isDelete) {
                  const success = handleDelete(rowData.id);
                  if (success) alert(`You deleted ${rowData.name}(id: ${rowData.id})`);
                  else alert(`Can't delete ${rowData.name}(id: ${rowData.id})`);
                }
              },
              // disabled: rowData.birthYear < 2000
            }),
            {
              icon: tableIcons.Add,
              tooltip: 'Add New Club',
              isFreeAction: true,
              onClick: (event) => router.push('/superadmin/clubs/add'),
            },
          ]}
          options={{
            actionsColumnIndex: -1,
          }}
        />
      </main>
    </div>
  );
}
