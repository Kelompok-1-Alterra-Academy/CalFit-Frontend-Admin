import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import MaterialTable from 'material-table';
import { Grid } from '@mui/material';
import { useStyles } from '../../../../../styles/classes/Index.style';
import { TopBar } from '../../../../../src/components/navigation/TopBar';
import { MenuBar } from '../../../../../src/components/navigation/MenuBar';
import { tableIcons } from '../../../../../src/components/table/MaterialTable';
import { getAllClasses, deleteClass } from '../../../../../src/utils/fetchApi/classes';
import { getClassesByGymId } from '../../../../../src/utils/fetchApi/clubs';
import jwtDecode from '../../../../../src/utils/jwtDecode/jwtDecode';

export default function ClassesSuperAdmin() {
  const styles = useStyles();
  const router = useRouter();
  const [classesList, setClassesList] = useState([]);
  const [alertClasses, setAlertClasses] = useState({
    status: false,
    message: '',
  });
  const [loading, setLoading] = useState(false);
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  useEffect(() => {
    const { Superadmin: superadmin } = jwtDecode();
    if (!superadmin) router.push('/superadmin/login');
    else setIsAuthenticated(true);
  }, []);

  useEffect(() => {
    if (router.query.id) {
      getClassesByGymId(setLoading, setClassesList, router.query.id);
    }
  }, [router.query.id]);

  useEffect(() => {
    classesList?.map((classItem) => {
      classItem.type = classItem.online ? 'Online' : 'Offline';
    });
  }, [classesList]);

  const handleDelete = async (gymId, classId) => {
    const res = await deleteClass(setLoading, setAlertClasses, gymId, classId);
    console.log(res);
    if (res.status === 200) {
      setClassesList(classesList.filter((classItem) => classItem.id !== classId));
      return true;
    }
    return false;
  };

  return (
    isAuthenticated && (
      <div className={styles.root}>
        <Head>
          <title>Classes Page</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>

        <TopBar />

        <main className={styles.main}>
          <Grid container spacing={2} m={2}>
            <Grid item xs={3}>
              <MenuBar selected={'Classes'} />
            </Grid>
            <Grid item xs={9}>
              <MaterialTable
                className={styles.table}
                title='Classes'
                icons={tableIcons}
                columns={[
                  { title: 'Id', field: 'id' },
                  { title: 'Name', field: 'name' },
                  { title: 'Type', field: 'type', width: '10%' },
                  { title: 'Category', field: 'category' },
                  { title: 'Status', field: 'status' },
                ]}
                data={classesList}
                actions={[
                  {
                    icon: tableIcons.Edit,
                    tooltip: 'Edit Class',
                    // onClick: (event, rowData) => router.push(`/superadmin/classes/${rowData.id}/edit`),
                    onClick: (event, rowData) => router.push(`/superadmin/clubs/${router.query.id}/classes/${rowData.id}/edit`),
                  },
                  (rowData) => ({
                    icon: tableIcons.Delete,
                    tooltip: 'Delete Class',
                    onClick: (event, rowData) => {
                      const isDelete = confirm(`You want to delete ${rowData.name}(id: ${rowData.id}) ?`);
                      if (isDelete) {
                        const success = handleDelete(rowData.gymID, rowData.id);
                        if (success) alert(`You deleted ${rowData.name}(id: ${rowData.id})`);
                        else alert(`Can't delete ${rowData.name}(id: ${rowData.id})`);
                      }
                    },
                  }),
                  {
                    icon: tableIcons.Add,
                    tooltip: 'Add New Class',
                    isFreeAction: true,
                    onClick: (event) => router.push(`/superadmin/clubs/${router.query.id}/classes/add`),
                  },
                ]}
                options={{
                  actionsColumnIndex: -1,
                }}
              />
            </Grid>
          </Grid>
        </main>
      </div>
    )
  );
}
